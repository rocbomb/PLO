VARTK var
IDEN a
COLON :
ARRAYTK array
LBRACK [
INTCON 10
RBRACK ]
OFTK of
INTTK integer
SEMICN ;
IDEN index
COMMA ,
IDEN num
COMMA ,
IDEN temp
COLON :
INTTK integer
SEMICN ;
PROCETK procedure
IDEN qsort
LPARENT (
IDEN l
COMMA ,
IDEN h
COLON :
INTTK integer
RPARENT )
SEMICN ;
VARTK var
IDEN i
COMMA ,
IDEN j
COMMA ,
IDEN t
COMMA ,
IDEN m
COLON :
INTTK integer
SEMICN ;
PROCETK procedure
IDEN swap
LPARENT (
VARTK var
IDEN i
COMMA ,
IDEN j
COLON :
INTTK integer
RPARENT )
SEMICN ;
VARTK var
IDEN temp
COLON :
INTTK integer
SEMICN ;
BEGINTK begin
IDEN temp
ASSIGN :=
IDEN i
SEMICN ;
IDEN i
ASSIGN :=
IDEN j
SEMICN ;
IDEN j
ASSIGN :=
IDEN temp
ENDTK end
SEMICN ;
BEGINTK begin
IDEN i
ASSIGN :=
IDEN l
SEMICN ;
IDEN j
ASSIGN :=
IDEN h
SEMICN ;
IDEN m
ASSIGN :=
IDEN a
LBRACK [
LPARENT (
IDEN i
PLUS +
IDEN j
RPARENT )
DIV /
INTCON 2
RBRACK ]
SEMICN ;
WHILETK while
IDEN i
GRE <
IDEN j
DOTK do
BEGINTK begin
WHILETK while
IDEN a
LBRACK [
IDEN i
RBRACK ]
GRE <
IDEN m
DOTK do
IDEN i
ASSIGN :=
IDEN i
PLUS +
INTCON 1
SEMICN ;
WHILETK while
IDEN m
GRE <
IDEN a
LBRACK [
IDEN j
RBRACK ]
DOTK do
IDEN j
ASSIGN :=
IDEN j
MINU -
INTCON 1
SEMICN ;
IFTK if
IDEN i
GRE <=
IDEN j
THENTK then
BEGINTK begin
IDEN swap
LPARENT (
IDEN a
LBRACK [
IDEN i
RBRACK ]
COMMA ,
IDEN a
LBRACK [
IDEN j
RBRACK ]
RPARENT )
SEMICN ;
IDEN i
ASSIGN :=
IDEN i
PLUS +
INTCON 1
SEMICN ;
IDEN j
ASSIGN :=
IDEN j
MINU -
INTCON 1
SEMICN ;
ENDTK end
SEMICN ;
ENDTK end
SEMICN ;
IFTK if
IDEN j
GRE >
IDEN l
THENTK then
IDEN qsort
LPARENT (
IDEN l
COMMA ,
IDEN j
RPARENT )
SEMICN ;
IFTK if
IDEN i
GRE <
IDEN h
THENTK then
IDEN qsort
LPARENT (
IDEN i
COMMA ,
IDEN h
RPARENT )
SEMICN ;
ENDTK end
SEMICN ;
BEGINTK begin
WRITETK write
LPARENT (
STRCON please input num <10 
RPARENT )
SEMICN ;
READTK read
LPARENT (
IDEN num
RPARENT )
SEMICN ;
FORTK for
IDEN index
ASSIGN :=
INTCON 1
TOTK to
IDEN num
DOTK do
BEGINTK begin
WRITETK write
LPARENT (
STRCON please input number> 
RPARENT )
SEMICN ;
READTK read
LPARENT (
IDEN temp
RPARENT )
SEMICN ;
IDEN a
LBRACK [
IDEN index
MINU -
INTCON 1
RBRACK ]
ASSIGN :=
IDEN temp
ENDTK end
SEMICN ;
IDEN qsort
LPARENT (
INTCON 0
COMMA ,
IDEN num
MINU -
INTCON 1
RPARENT )
SEMICN ;
FORTK for
IDEN index
ASSIGN :=
INTCON 0
TOTK to
IDEN num
MINU -
INTCON 1
DOTK do
WRITETK write
LPARENT (
IDEN a
LBRACK [
IDEN index
RBRACK ]
RPARENT )
SEMICN ;
ENDTK end
PERIOD .
